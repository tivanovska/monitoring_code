// Generated by gencpp from file imagelistener/imageViewing.msg
// DO NOT EDIT!


#ifndef IMAGELISTENER_MESSAGE_IMAGEVIEWING_H
#define IMAGELISTENER_MESSAGE_IMAGEVIEWING_H

#include <ros/service_traits.h>


#include <imagelistener/imageViewingRequest.h>
#include <imagelistener/imageViewingResponse.h>


namespace imagelistener
{

struct imageViewing
{

typedef imageViewingRequest Request;
typedef imageViewingResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct imageViewing
} // namespace imagelistener


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::imagelistener::imageViewing > {
  static const char* value()
  {
    return "9bcd3c971dc9a992e6146aaf6c22043b";
  }

  static const char* value(const ::imagelistener::imageViewing&) { return value(); }
};

template<>
struct DataType< ::imagelistener::imageViewing > {
  static const char* value()
  {
    return "imagelistener/imageViewing";
  }

  static const char* value(const ::imagelistener::imageViewing&) { return value(); }
};


// service_traits::MD5Sum< ::imagelistener::imageViewingRequest> should match 
// service_traits::MD5Sum< ::imagelistener::imageViewing > 
template<>
struct MD5Sum< ::imagelistener::imageViewingRequest>
{
  static const char* value()
  {
    return MD5Sum< ::imagelistener::imageViewing >::value();
  }
  static const char* value(const ::imagelistener::imageViewingRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::imagelistener::imageViewingRequest> should match 
// service_traits::DataType< ::imagelistener::imageViewing > 
template<>
struct DataType< ::imagelistener::imageViewingRequest>
{
  static const char* value()
  {
    return DataType< ::imagelistener::imageViewing >::value();
  }
  static const char* value(const ::imagelistener::imageViewingRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::imagelistener::imageViewingResponse> should match 
// service_traits::MD5Sum< ::imagelistener::imageViewing > 
template<>
struct MD5Sum< ::imagelistener::imageViewingResponse>
{
  static const char* value()
  {
    return MD5Sum< ::imagelistener::imageViewing >::value();
  }
  static const char* value(const ::imagelistener::imageViewingResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::imagelistener::imageViewingResponse> should match 
// service_traits::DataType< ::imagelistener::imageViewing > 
template<>
struct DataType< ::imagelistener::imageViewingResponse>
{
  static const char* value()
  {
    return DataType< ::imagelistener::imageViewing >::value();
  }
  static const char* value(const ::imagelistener::imageViewingResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // IMAGELISTENER_MESSAGE_IMAGEVIEWING_H
